// TO %
@function prc($pxOne, $pxTwo) {
    $result: ($pxOne / $pxTwo) * 100%;
    @return $result;
}

// Перевод в REM
@function rem($px) {
    $result: calc($px / $defaultFz) + rem;
    @return $result;
}

// Перевод в EM
@function em($px) {
    $result: calc($px / $defaultFz) + em;
    @return $result;
}

// Адаптивное свойство
@mixin adaptive-value($cssProperty, $startValue, $minValue, $type) {
    $addSize: $startValue - $minValue;
    @if $type == 1 {
        // Только если меньше контейнера
        #{$cssProperty}: $startValue + px;
        @media (max-width: #{$maxWidthContainer + px}) {
            #{$cssProperty}: calc(#{$minValue + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
        }
    } @else if $type==2 {
        // Только больше контейнера
        #{$cssProperty}: $startValue + px;
        @media (min-width: #{$maxWidthContainer + px}) {
            #{$cssProperty}: calc(#{$minValue + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    } @else {
        // Всегда
        #{$cssProperty}: calc(#{$minValue + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
    // $cssProperty: calc($minValue + px + ($startValue - $minValue) * ((100vw - 320px) / ($maxWidthContainer - 320)));
}